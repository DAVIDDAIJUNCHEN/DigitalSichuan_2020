columns:
- app: [busi_name, flow, month_id]
  sms: [opposite_no_m, calltype_id, request_datetime]
  user: [city_name, county_name, idcard_cnt, arpu_202005]
  voc: [opposite_no_m, calltype_id, start_datetime, call_dur, city_name, county_name, imei_m]
features:
- A14:
  - columns:
    - voc: [opposite_no_m, start_datetime, call_dur]
    function:
    - name: total_call_time
      para:
        months: &id001 [2020-05]
        represent_nan: -100
    module: ./hwk/codes_feature/voc_feature_hwk.py
    name: total_call_time
- A22_min:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: first_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: min
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: first_call_time_min
- A22_max:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: first_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: max
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: first_call_time_max
- A22_mean:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: first_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: mean
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: first_call_time_mean
- A22_median:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: first_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: median
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: first_call_time_median
- A22_std:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: first_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: std
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: first_call_time_std
- A24_min:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: last_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: min
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: last_call_time_min
- A24_max:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: last_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: max
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: last_call_time_max
- A24_mean:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: last_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: mean
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: last_call_time_mean
- A24_median:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: last_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: median
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: last_call_time_median
- A24_std:
  - columns:
    - voc: [opposite_no_m, start_datetime]
    function:
    - name: last_call_time
      para:
        months: *id001
        represent_nan: -100
        statistics: std
    module: ./yongling/codes_feature/voc_feature_yongling.py
    name: last_call_time_std
- A25:
  - columns:
    - voc: [opposite_no_m, start_datetime, calltype_id, call_dur]
    function:
    - name: call_in_total_time
      para:
        months: *id001
        represent_nan: -100
    module: ./yangli/codes_feature/voc_feature_liyang.py
    name: callin_total_time
- A26:
  - columns:
    - voc: [opposite_no_m, start_datetime, calltype_id, call_dur]
    function:
    - name: call_out_total_time
      para:
        months: *id001
        represent_nan: -100
    module: ./yangli/codes_feature/voc_feature_liyang.py
    name: call_out_total_time
- A28:
  - columns:
    - voc: [opposite_no_m, start_datetime, calltype_id, call_dur]
    function:
    - name: call_out_time_avr
      para:
        months: *id001
        represent_nan: -100
    module: ./yangli/codes_feature/voc_feature_liyang.py
    name: call_out_time_avr
- A53:
  - columns:
    - voc: [start_datetime, calltype_id, call_dur]
    function:
    - name: long_callin
      para:
        months: *id001
        represent_nan: -10
        threshold_duration: 600
    module: ./yangli/codes_feature/voc_feature_liyang.py
    name: long_callin
- A63:
  - columns:
    - voc: [start_datetime, calltype_id, call_dur]
    function:
    - name: callout_active_interval
      para:
        months: *id001
        represent_nan: -30
    module: ./yangli/codes_feature/voc_feature_liyang.py
    name: callout_active_interval
- A64:
  - columns:
    - voc: [start_datetime, calltype_id, call_dur]
    function:
    - name: callin_active_interval
      para:
        months: *id001
        represent_nan: -30
    module: ./yangli/codes_feature/voc_feature_liyang.py
    name: callin_active_interval
- C8:
  - columns:
    - app: [app_busi_name]
    function:
    - name: suspect_app_num
      para:
        months: *id001
        represent_nan: -10
    module: ./yangli/codes_feature/app_feature_liyang.py
    name: number_suspected_app
- D3:
  - columns:
    - user: [arpu_201908, arpu_201909, arpu_201910, arpu_201911, arpu_201912, arpu_202001,
        arpu_202002, arpu_202003]
    function:
    - name: arpu_std
      para: {represent_nan: -10}
    module: ./hwk/codes_feature/user_feature_hwk.py
    name: arpu_std
name: all_features